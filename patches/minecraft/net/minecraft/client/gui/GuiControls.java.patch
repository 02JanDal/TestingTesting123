--- ../src_base/minecraft/net/minecraft/client/gui/GuiControls.java
+++ ../src_work/minecraft/net/minecraft/client/gui/GuiControls.java
@@ -5,6 +5,8 @@
 import net.minecraft.client.settings.GameSettings;
 import net.minecraft.client.settings.KeyBinding;
 import net.minecraft.util.StringTranslate;
+
+import net.minecraftforge.client.GuiControlsScrollPanel;
 
 @SideOnly(Side.CLIENT)
 public class GuiControls extends GuiScreen
@@ -23,6 +25,8 @@
     /** The ID of the  button that has been pressed. */
     private int buttonId = -1;
 
+    private GuiControlsScrollPanel scrollPane;
+
     public GuiControls(GuiScreen par1GuiScreen, GameSettings par2GameSettings)
     {
         this.parentScreen = par1GuiScreen;
@@ -39,15 +43,12 @@
      */
     public void initGui()
     {
+        scrollPane = new GuiControlsScrollPanel(this, options, mc);
         StringTranslate stringtranslate = StringTranslate.getInstance();
         int i = this.func_73907_g();
 
-        for (int j = 0; j < this.options.keyBindings.length; ++j)
-        {
-            this.controlList.add(new GuiSmallButton(j, i + j % 2 * 160, this.height / 6 + 24 * (j >> 1), 70, 20, this.options.getOptionDisplayString(j)));
-        }
-
-        this.controlList.add(new GuiButton(200, this.width / 2 - 100, this.height / 6 + 168, stringtranslate.translateKey("gui.done")));
+        this.controlList.add(new GuiButton(200, this.width / 2 - 100, this.height - 28, stringtranslate.translateKey("gui.done")));
+        scrollPane.registerScrollButtons(controlList, 7, 8);
         this.screenTitle = stringtranslate.translateKey("controls.title");
     }
 
@@ -56,19 +57,9 @@
      */
     protected void actionPerformed(GuiButton par1GuiButton)
     {
-        for (int i = 0; i < this.options.keyBindings.length; ++i)
-        {
-            ((GuiButton)this.controlList.get(i)).displayString = this.options.getOptionDisplayString(i);
-        }
-
         if (par1GuiButton.id == 200)
         {
             this.mc.displayGuiScreen(this.parentScreen);
-        }
-        else
-        {
-            this.buttonId = par1GuiButton.id;
-            par1GuiButton.displayString = "> " + this.options.getOptionDisplayString(par1GuiButton.id) + " <";
         }
     }
 
@@ -77,17 +68,7 @@
      */
     protected void mouseClicked(int par1, int par2, int par3)
     {
-        if (this.buttonId >= 0)
-        {
-            this.options.setKeyBinding(this.buttonId, -100 + par3);
-            ((GuiButton)this.controlList.get(this.buttonId)).displayString = this.options.getOptionDisplayString(this.buttonId);
-            this.buttonId = -1;
-            KeyBinding.resetKeyBindingArrayAndHash();
-        }
-        else
-        {
-            super.mouseClicked(par1, par2, par3);
-        }
+        super.mouseClicked(par1, par2, par3);
     }
 
     /**
@@ -95,14 +76,7 @@
      */
     protected void keyTyped(char par1, int par2)
     {
-        if (this.buttonId >= 0)
-        {
-            this.options.setKeyBinding(this.buttonId, par2);
-            ((GuiButton)this.controlList.get(this.buttonId)).displayString = this.options.getOptionDisplayString(this.buttonId);
-            this.buttonId = -1;
-            KeyBinding.resetKeyBindingArrayAndHash();
-        }
-        else
+        if (scrollPane.keyTyped(par1, par2))
         {
             super.keyTyped(par1, par2);
         }
@@ -114,47 +88,8 @@
     public void drawScreen(int par1, int par2, float par3)
     {
         this.drawDefaultBackground();
-        this.drawCenteredString(this.fontRenderer, this.screenTitle, this.width / 2, 20, 16777215);
-        int k = this.func_73907_g();
-        int l = 0;
-
-        while (l < this.options.keyBindings.length)
-        {
-            boolean flag = false;
-            int i1 = 0;
-
-            while (true)
-            {
-                if (i1 < this.options.keyBindings.length)
-                {
-                    if (i1 == l || this.options.keyBindings[l].keyCode != this.options.keyBindings[i1].keyCode)
-                    {
-                        ++i1;
-                        continue;
-                    }
-
-                    flag = true;
-                }
-
-                if (this.buttonId == l)
-                {
-                    ((GuiButton)this.controlList.get(l)).displayString = "\u00a7f> \u00a7e??? \u00a7f<";
-                }
-                else if (flag)
-                {
-                    ((GuiButton)this.controlList.get(l)).displayString = "\u00a7c" + this.options.getOptionDisplayString(l);
-                }
-                else
-                {
-                    ((GuiButton)this.controlList.get(l)).displayString = this.options.getOptionDisplayString(l);
-                }
-
-                this.drawString(this.fontRenderer, this.options.getKeyBindingDescription(l), k + l % 2 * 160 + 70 + 6, this.height / 6 + 24 * (l >> 1) + 7, -1);
-                ++l;
-                break;
-            }
-        }
-
+        scrollPane.drawScreen(par1, par2, par3);
+        drawCenteredString(fontRenderer, screenTitle, width / 2, 4, 0xffffff);
         super.drawScreen(par1, par2, par3);
     }
 }

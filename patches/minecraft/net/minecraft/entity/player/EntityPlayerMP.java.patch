--- ../src_base/minecraft/net/minecraft/entity/player/EntityPlayerMP.java
+++ ../src_work/minecraft/net/minecraft/entity/player/EntityPlayerMP.java
@@ -9,6 +9,7 @@
 import java.util.List;
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.IMerchant;
+import net.minecraft.entity.item.EntityItem;
 import net.minecraft.entity.projectile.EntityArrow;
 import net.minecraft.inventory.Container;
 import net.minecraft.inventory.ContainerBeacon;
@@ -76,6 +77,11 @@
 import net.minecraft.world.WorldServer;
 import net.minecraft.world.chunk.Chunk;
 
+import net.minecraftforge.common.ForgeHooks;
+import net.minecraftforge.common.MinecraftForge;
+import net.minecraftforge.event.entity.player.PlayerDropsEvent;
+import net.minecraftforge.event.world.ChunkWatchEvent;
+
 public class EntityPlayerMP extends EntityPlayer implements ICrafting
 {
     private StringTranslate translator = new StringTranslate("en_US");
@@ -147,18 +153,10 @@
         par4ItemInWorldManager.thisPlayerMP = this;
         this.theItemInWorldManager = par4ItemInWorldManager;
         this.renderDistance = par1MinecraftServer.getConfigurationManager().getViewDistance();
-        ChunkCoordinates chunkcoordinates = par2World.getSpawnPoint();
+        ChunkCoordinates chunkcoordinates = par2World.provider.getRandomizedSpawnPoint();
         int i = chunkcoordinates.posX;
         int j = chunkcoordinates.posZ;
         int k = chunkcoordinates.posY;
-
-        if (!par2World.provider.hasNoSky && par2World.getWorldInfo().getGameType() != EnumGameType.ADVENTURE)
-        {
-            int l = Math.max(5, par1MinecraftServer.getSpawnProtectionSize() - 6);
-            i += this.rand.nextInt(l * 2) - l;
-            j += this.rand.nextInt(l * 2) - l;
-            k = par2World.getTopSolidOrLiquidBlock(i, j);
-        }
 
         this.setLocationAndAngles((double)i + 0.5D, (double)k, (double)j + 0.5D, 0.0F, 0.0F);
         this.mcServer = par1MinecraftServer;
@@ -255,7 +253,10 @@
                 if (chunkcoordintpair != null && this.worldObj.blockExists(chunkcoordintpair.chunkXPos << 4, 0, chunkcoordintpair.chunkZPos << 4))
                 {
                     arraylist.add(this.worldObj.getChunkFromChunkCoords(chunkcoordintpair.chunkXPos, chunkcoordintpair.chunkZPos));
-                    arraylist1.addAll(((WorldServer)this.worldObj).getAllTileEntityInBox(chunkcoordintpair.chunkXPos * 16, 0, chunkcoordintpair.chunkZPos * 16, chunkcoordintpair.chunkXPos * 16 + 16, 256, chunkcoordintpair.chunkZPos * 16 + 16));
+                    //BugFix: 16 makes it load an extra chunk, which isn't associated with a player, which makes it not unload unless a player walks near it.
+                    //ToDo: Find a way to efficiently clean abandoned chunks.
+                    //arraylist1.addAll(((WorldServer)this.worldObj).getAllTileEntityInBox(chunkcoordintpair.chunkXPos * 16, 0, chunkcoordintpair.chunkZPos * 16, chunkcoordintpair.chunkXPos * 16 + 16, 256, chunkcoordintpair.chunkZPos * 16 + 16));
+                    arraylist1.addAll(((WorldServer)this.worldObj).getAllTileEntityInBox(chunkcoordintpair.chunkXPos * 16, 0, chunkcoordintpair.chunkZPos * 16, chunkcoordintpair.chunkXPos * 16 + 15, 256, chunkcoordintpair.chunkZPos * 16 + 15));
                 }
             }
 
@@ -276,6 +277,7 @@
                 {
                     Chunk chunk = (Chunk)iterator2.next();
                     this.getServerForPlayer().getEntityTracker().func_85172_a(this, chunk);
+                    MinecraftForge.EVENT_BUS.post(new ChunkWatchEvent.Watch(chunk.getChunkCoordIntPair(), this));
                 }
             }
         }
@@ -320,11 +322,29 @@
      */
     public void onDeath(DamageSource par1DamageSource)
     {
+        if (ForgeHooks.onLivingDeath(this, par1DamageSource))
+        {
+            return;
+        }
+
         this.mcServer.getConfigurationManager().sendChatMsg(this.field_94063_bt.func_94546_b());
 
         if (!this.worldObj.getGameRules().getGameRuleBooleanValue("keepInventory"))
         {
+            captureDrops = true;
+            capturedDrops.clear();
+
             this.inventory.dropAllItems();
+
+            captureDrops = false;
+            PlayerDropsEvent event = new PlayerDropsEvent(this, par1DamageSource, capturedDrops, recentlyHit > 0);
+            if (!MinecraftForge.EVENT_BUS.post(event))
+            {
+                for (EntityItem item : capturedDrops)
+                {
+                    joinEntityItemWithWorld(item);
+                }
+            }
         }
     }
 

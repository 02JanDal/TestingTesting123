--- ../src-base/minecraft/net/minecraft/network/NetHandlerPlayServer.java
+++ ../src-work/minecraft/net/minecraft/network/NetHandlerPlayServer.java
@@ -85,6 +85,14 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
+import net.minecraftforge.common.ForgeHooks;
+import net.minecraftforge.common.MinecraftForge;
+import cpw.mods.fml.common.eventhandler.Event;
+import net.minecraftforge.event.ForgeEventFactory;
+import net.minecraftforge.event.ServerChatEvent;
+import net.minecraftforge.event.entity.player.PlayerInteractEvent;
+import net.minecraftforge.event.entity.player.PlayerInteractEvent.Action;
+
 public class NetHandlerPlayServer implements INetHandlerPlayServer
 {
     private static final Logger field_147370_c = LogManager.getLogger();
@@ -219,6 +227,11 @@
                         this.field_147369_b.ridingEntity.updateRiderPosition();
                     }
 
+                    if (!this.field_147380_r) //Fixes teleportation kick while riding entities
+                    {
+                        return;
+                    }
+
                     this.field_147367_d.getConfigurationManager().serverUpdateMountedMovingPlayer(this.field_147369_b);
 
                     if (this.field_147380_r)
@@ -296,9 +309,10 @@
                 d4 = d1 - this.field_147369_b.posX;
                 double d5 = d2 - this.field_147369_b.posY;
                 double d6 = d3 - this.field_147369_b.posZ;
-                double d7 = Math.min(Math.abs(d4), Math.abs(this.field_147369_b.motionX));
-                double d8 = Math.min(Math.abs(d5), Math.abs(this.field_147369_b.motionY));
-                double d9 = Math.min(Math.abs(d6), Math.abs(this.field_147369_b.motionZ));
+                //BUGFIX: min -> max, grabs the highest distance
+                double d7 = Math.max(Math.abs(d4), Math.abs(this.field_147369_b.motionX));
+                double d8 = Math.max(Math.abs(d5), Math.abs(this.field_147369_b.motionY));
+                double d9 = Math.max(Math.abs(d6), Math.abs(this.field_147369_b.motionZ));
                 double d10 = d7 * d7 + d8 * d8 + d9 * d9;
 
                 if (d10 > 100.0D && (!this.field_147367_d.isSinglePlayer() || !this.field_147367_d.getServerOwner().equals(this.field_147369_b.getCommandSenderName())))
@@ -316,6 +330,11 @@
                     this.field_147369_b.jump();
                 }
 
+                if (!this.field_147380_r) //Fixes "Moved Too Fast" kick when being teleported while moving
+                {
+                    return;
+                }
+
                 this.field_147369_b.moveEntity(d4, d5, d6);
                 this.field_147369_b.onGround = p_147347_1_.func_149465_i();
                 this.field_147369_b.addMovementStat(d4, d5, d6);
@@ -338,10 +357,15 @@
                     field_147370_c.warn(this.field_147369_b.getCommandSenderName() + " moved wrongly!");
                 }
 
+                if (!this.field_147380_r) //Fixes "Moved Too Fast" kick when being teleported while moving
+                {
+                    return;
+                }
+
                 this.field_147369_b.setPositionAndRotation(d1, d2, d3, f1, f2);
                 boolean flag2 = worldserver.getCollidingBoundingBoxes(this.field_147369_b, this.field_147369_b.boundingBox.copy().contract((double)f3, (double)f3, (double)f3)).isEmpty();
 
-                if (flag && (flag1 || !flag2) && !this.field_147369_b.isPlayerSleeping())
+                if (flag && (flag1 || !flag2) && !this.field_147369_b.isPlayerSleeping() && !this.field_147369_b.noClip)
                 {
                     this.func_147364_a(this.field_147373_o, this.field_147382_p, this.field_147381_q, f1, f2);
                     return;
@@ -349,7 +373,7 @@
 
                 AxisAlignedBB axisalignedbb = this.field_147369_b.boundingBox.copy().expand((double)f3, (double)f3, (double)f3).addCoord(0.0D, -0.55D, 0.0D);
 
-                if (!this.field_147367_d.isFlightAllowed() && !this.field_147369_b.theItemInWorldManager.isCreative() && !worldserver.checkBlockCollision(axisalignedbb))
+                if (!this.field_147367_d.isFlightAllowed() && !this.field_147369_b.theItemInWorldManager.isCreative() && !worldserver.checkBlockCollision(axisalignedbb) && !this.field_147369_b.capabilities.allowFlying)
                 {
                     if (d11 >= -0.03125D)
                     {
@@ -368,6 +392,11 @@
                     this.field_147365_f = 0;
                 }
 
+                if (!this.field_147380_r) //Fixes "Moved Too Fast" kick when being teleported while moving
+                {
+                    return;
+                }
+
                 this.field_147369_b.onGround = p_147347_1_.func_149465_i();
                 this.field_147367_d.getConfigurationManager().serverUpdateMountedMovingPlayer(this.field_147369_b);
                 this.field_147369_b.updateFlyingState(this.field_147369_b.posY - d0, p_147347_1_.func_149465_i());
@@ -436,7 +465,10 @@
                 double d2 = this.field_147369_b.posZ - ((double)k + 0.5D);
                 double d3 = d0 * d0 + d1 * d1 + d2 * d2;
 
-                if (d3 > 36.0D)
+                double dist = field_147369_b.theItemInWorldManager.getBlockReachDistance() + 1;
+                dist *= dist;
+
+                if (d3 > dist)
                 {
                     return;
                 }
@@ -497,7 +529,11 @@
                 return;
             }
 
-            this.field_147369_b.theItemInWorldManager.tryUseItem(this.field_147369_b, worldserver, itemstack);
+            PlayerInteractEvent event = ForgeEventFactory.onPlayerInteract(field_147369_b, PlayerInteractEvent.Action.RIGHT_CLICK_AIR, 0, 0, 0, -1);
+            if (event.useItem != Event.Result.DENY)
+            {
+                this.field_147369_b.theItemInWorldManager.tryUseItem(this.field_147369_b, worldserver, itemstack);
+            }
         }
         else if (p_147346_1_.func_149571_d() >= this.field_147367_d.getBuildLimit() - 1 && (p_147346_1_.func_149568_f() == 1 || p_147346_1_.func_149571_d() >= this.field_147367_d.getBuildLimit()))
         {
@@ -508,7 +544,9 @@
         }
         else
         {
-            if (this.field_147380_r && this.field_147369_b.getDistanceSq((double)i + 0.5D, (double)j + 0.5D, (double)k + 0.5D) < 64.0D && !this.field_147367_d.isBlockProtected(worldserver, i, j, k, this.field_147369_b))
+            double dist = field_147369_b.theItemInWorldManager.getBlockReachDistance() + 1;
+            dist *= dist;
+            if (this.field_147380_r && this.field_147369_b.getDistanceSq((double)i + 0.5D, (double)j + 0.5D, (double)k + 0.5D) < dist && !this.field_147367_d.isBlockProtected(worldserver, i, j, k, this.field_147369_b))
             {
                 this.field_147369_b.theItemInWorldManager.activateBlockOrUseItem(this.field_147369_b, worldserver, itemstack, i, j, k, l, p_147346_1_.func_149573_h(), p_147346_1_.func_149569_i(), p_147346_1_.func_149575_j());
             }
@@ -674,6 +712,8 @@
             else
             {
                 ChatComponentTranslation chatcomponenttranslation1 = new ChatComponentTranslation("chat.type.text", new Object[] {this.field_147369_b.func_145748_c_(), s});
+                chatcomponenttranslation1 = ForgeHooks.onServerChatEvent(this, s, chatcomponenttranslation1);
+                if (chatcomponenttranslation1 == null) return;
                 this.field_147367_d.getConfigurationManager().func_148544_a(chatcomponenttranslation1, false);
             }
 
@@ -810,7 +850,7 @@
                         return;
                     }
 
-                    this.field_147369_b = this.field_147367_d.getConfigurationManager().respawnPlayer(this.field_147369_b, 0, false);
+                    this.field_147369_b = this.field_147367_d.getConfigurationManager().respawnPlayer(this.field_147369_b, field_147369_b.dimension, false);
                 }
 
                 break;

--- ../src_base/minecraft/net/minecraft/src/TileEntityFurnace.java
+++ ../src_work/minecraft/net/minecraft/src/TileEntityFurnace.java
@@ -1,6 +1,10 @@
 package net.minecraft.src;
 
-public class TileEntityFurnace extends TileEntity implements IInventory
+import net.minecraftforge.common.ForgeHooks;
+import net.minecraftforge.common.ISidedInventory;
+import net.minecraftforge.common.Orientation;
+
+public class TileEntityFurnace extends TileEntity implements IInventory, ISidedInventory
 {
     /**
      * The ItemStacks that hold the items currently being used in the furnace
@@ -226,8 +230,7 @@
 
                         if (this.furnaceItemStacks[1].stackSize == 0)
                         {
-                            Item var3 = this.furnaceItemStacks[1].getItem().getContainerItem();
-                            this.furnaceItemStacks[1] = var3 != null ? new ItemStack(var3) : null;
+                            this.furnaceItemStacks[1] = this.furnaceItemStacks[1].getItem().getContainerItemStack(furnaceItemStacks[1]);
                         }
                     }
                 }
@@ -273,8 +276,12 @@
         }
         else
         {
-            ItemStack var1 = FurnaceRecipes.smelting().getSmeltingResult(this.furnaceItemStacks[0].getItem().shiftedIndex);
-            return var1 == null ? false : (this.furnaceItemStacks[2] == null ? true : (!this.furnaceItemStacks[2].isItemEqual(var1) ? false : (this.furnaceItemStacks[2].stackSize < this.getInventoryStackLimit() && this.furnaceItemStacks[2].stackSize < this.furnaceItemStacks[2].getMaxStackSize() ? true : this.furnaceItemStacks[2].stackSize < var1.getMaxStackSize())));
+            ItemStack var1 = FurnaceRecipes.smelting().getSmeltingResult(this.furnaceItemStacks[0]);
+            if (var1 == null) return false;
+            if (this.furnaceItemStacks[2] == null) return true;
+            if (!this.furnaceItemStacks[2].isItemEqual(var1)) return false;
+            int result = furnaceItemStacks[2].stackSize + var1.stackSize;
+            return (result <= getInventoryStackLimit() && result <= var1.getMaxStackSize());
         }
     }
 
@@ -285,15 +292,15 @@
     {
         if (this.canSmelt())
         {
-            ItemStack var1 = FurnaceRecipes.smelting().getSmeltingResult(this.furnaceItemStacks[0].getItem().shiftedIndex);
+            ItemStack var1 = FurnaceRecipes.smelting().getSmeltingResult(this.furnaceItemStacks[0]);
 
             if (this.furnaceItemStacks[2] == null)
             {
                 this.furnaceItemStacks[2] = var1.copy();
             }
-            else if (this.furnaceItemStacks[2].itemID == var1.itemID)
-            {
-                ++this.furnaceItemStacks[2].stackSize;
+            else if (this.furnaceItemStacks[2].isItemEqual(var1))
+            {
+                furnaceItemStacks[2].stackSize += var1.stackSize;
             }
 
             --this.furnaceItemStacks[0].stackSize;
@@ -320,7 +327,7 @@
             int var1 = par0ItemStack.getItem().shiftedIndex;
             Item var2 = par0ItemStack.getItem();
 
-            if (var1 < 256 && Block.blocksList[var1] != null)
+            if (par0ItemStack.getItem() instanceof ItemBlock && Block.blocksList[var1] != null)
             {
                 Block var3 = Block.blocksList[var1];
 
@@ -335,7 +342,20 @@
                 }
             }
 
-            return var2 instanceof ItemTool && ((ItemTool)var2).func_77861_e().equals("WOOD") ? 200 : (var2 instanceof ItemSword && ((ItemSword)var2).func_77825_f().equals("WOOD") ? 200 : (var2 instanceof ItemHoe && ((ItemHoe)var2).func_77842_f().equals("WOOD") ? 200 : (var1 == Item.stick.shiftedIndex ? 100 : (var1 == Item.coal.shiftedIndex ? 1600 : (var1 == Item.bucketLava.shiftedIndex ? 20000 : (var1 == Block.sapling.blockID ? 100 : (var1 == Item.blazeRod.shiftedIndex ? 2400 : 0)))))));
+            if (var2 instanceof ItemTool  && ((ItemTool) var2).func_77861_e().equals("WOOD")) return 200; 
+            if (var2 instanceof ItemSword && ((ItemSword)var2).func_77825_f().equals("WOOD")) return 200; 
+            if (var2 instanceof ItemHoe   && ((ItemHoe)  var2).func_77842_f().equals("WOOD")) return 200; 
+            if (var1 == Item.stick.shiftedIndex) return 100;
+            if (var1 == Item.coal.shiftedIndex) return 1600; 
+            if (var1 == Item.bucketLava.shiftedIndex) return 20000; 
+            if (var1 == Block.sapling.blockID) return 100; 
+            if (var1 == Item.blazeRod.shiftedIndex) return 2400;
+            int ret = ForgeHooks.getItemBurnTime(par0ItemStack);
+            if (ret > 0)
+            {
+                return ret;
+            }
+            return 0;
         }
     }
 
@@ -358,4 +378,18 @@
     public void openChest() {}
 
     public void closeChest() {}
+
+    @Override
+    public int getStartInventorySide(Orientation side)
+    {
+        if (side == Orientation.DOWN) return 1;
+        if (side == Orientation.UP) return 0; 
+        return 2;
+    }
+
+    @Override
+    public int getSizeInventorySide(Orientation side)
+    {
+        return 1;
+    }
 }
